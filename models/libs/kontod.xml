<?xml version = "1.0" encoding="Windows-1252" standalone="yes"?>
<VFPData>
  <grid>
    <sql>SELECT id,
                           trim(kood)::VARCHAR(20)        AS kood,
                           trim(nimetus)::VARCHAR(254)    AS nimetus,
                           $2::INTEGER                    AS userId,
                           CASE
                               WHEN l.tun5 = 1 THEN 'SD'
                               WHEN l.tun5 = 2 THEN 'SK'
                               WHEN l.tun5 = 3 THEN 'D'
                               WHEN l.tun5 = 4 THEN 'K'
                               ELSE NULL END::VARCHAR(20) AS konto_tyyp
                    FROM libs.library l
                    WHERE library = 'KONTOD'
                      AND l.status &lt;&gt; 3</sql>
    <alias>curKontod</alias>
  </grid>
  <select>
    <sql>SELECT coalesce(l.rekvid, 0)                                         AS rekvid,
                     CASE
                         WHEN l.tun5 = 1 THEN 'SD'
                         WHEN l.tun5 = 2 THEN 'SK'
                         WHEN l.tun5 = 3 THEN 'D'
                         WHEN l.tun5 = 4 THEN 'K'
                         ELSE NULL END::VARCHAR(20)                                AS konto_tyyp,
                     l.id,
                     trim(l.kood)::VARCHAR(20)                                     AS kood,
                     trim(l.nimetus)::VARCHAR(254)                                 AS nimetus,
                     l.library,
                     l.tun1,
                     l.tun2,
                     l.tun3,
                     l.tun4,
                     l.muud,
                     $2::INTEGER                                                   AS userid,
                     'KONTOD'                                                      AS doc_type_id,
                     l.tun5                                                        AS tyyp,
                     l.status,
                     coalesce((l.properties::JSONB -&gt;&gt; 'kas_virtual')::INTEGER, 0) AS kas_virtual,
                     (l.properties::JSONB -&gt;&gt; 'valid')::DATE                       AS valid
              FROM libs.library l
              WHERE id = $1</sql>
    <sqlAsNew>select null::integer as rekvId, 
            'SD'::varchar(20) as konto_tyyp, 
            $1::integer as id , $2::integer as userid, 'KONTOD' as doc_type_id,
            null::varchar(20) as  kood,
            null::varchar(20) as nimetus,
            'KONTOD'::text as library,
            null::integer as tun1,
            null::integer as tun2,
            null::integer as tun3,
            null::integer as tun4,
            2 as tyyp,
            0 as status,
            0 as kas_virtual,
            null::text as muud,
            null::date as valid</sqlAsNew>
    <query />
    <multiple>false</multiple>
    <alias>row</alias>
  </select>
  <select>
    <sql>SELECT s.*,
                         left(a.nimetus, 120)::VARCHAR AS nimetus
                  FROM libs.subkonto s
                           INNER JOIN libs.asutus a ON a.id = s.asutusid
                           INNER JOIN ou.userid u ON u.id = $2
                  WHERE s.kontoid = $1
                    AND s.rekvid = u.rekvId</sql>
    <query />
    <multiple>true</multiple>
    <alias>subkonto</alias>
  </select>
  <select>
    <sql>SELECT $1 AS rekv_id, *
                  FROM jsonb_to_recordset(
                               get_konto_kasutus($2::INTEGER, $3::DATE)
                           ) AS x (error_message TEXT, error_code INTEGER)
                  WHERE error_message IS NOT NULL
            </sql>
    <query />
    <multiple>true</multiple>
    <alias>validate_lib_usage</alias>
  </select>
  <selectAsLibs>
    <sql>SELECT *, $1 AS rekv_id
                   FROM com_kontoplaan l
                   ORDER BY kood</sql>
    <alias>selectAsLibs</alias>
  </selectAsLibs>
  <saveDoc>
    <sql>select libs.sp_salvesta_konto($1, $2, $3) as id</sql>
    <alias>saveDoc</alias>
  </saveDoc>
  <deleteDoc>
    <sql>SELECT error_code, result, error_message
                FROM libs.sp_delete_konto($1, $2)</sql>
    <alias>deleteDoc</alias>
  </deleteDoc>
  <requiredFields>
    <validate>kood,nimetus</validate>
  </requiredFields>
  <executeSql>
    <sql></sql>
    <alias></alias>
  </executeSql>
  <executeCommand>
    <sql></sql>
    <alias></alias>
  </executeCommand>
  <register>
    <sql></sql>
    <alias></alias>
  </register>
  <endProcess>
    <sql />
    <alias />
  </endProcess>
  <generateJournal>
    <sql />
    <alias />
  </generateJournal>
  <print></print>
</VFPData>
